apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'

ext {
    querydslVersion = "3.3.4"
}

sourceSets {
    generated {
        java {
            srcDirs = ['src/main/querydsl']
        }
    }
}

configurations {
    querydslapt
}

buildscript {
    repositories {
        jcenter()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/libs-release" }
        maven { url "http://repo.spring.io/libs-milestone" }
        mavenLocal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.3.RELEASE")
    }
}
 
repositories {
    jcenter()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/libs-release" }
    maven { url "http://repo.spring.io/libs-milestone" }
    mavenLocal()
}

dependencies {

    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")

    compile("mysql:mysql-connector-java")
    compile("com.h2database:h2")

    compile("org.projectlombok:lombok:1.14.0")
	compile("com.mysema.querydsl:querydsl-jpa:$querydslVersion")
	querydslapt("com.mysema.querydsl:querydsl-apt:$querydslVersion")

    compile("org.webjars:bootstrap:3.3.4")
    compile("org.webjars:jquery:2.1.4")

    testCompile("junit:junit")
    testCompile("org.springframework.boot:spring-boot-starter-test")

    compile("joda-time:joda-time:2.7")

}

task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.querydslapt
    options.compilerArgs = [
        "-proc:only",
        "-processor", "com.mysema.query.apt.jpa.JPAAnnotationProcessor"
    ]
    destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}


compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
	dependsOn generateQueryDSL
    source generateQueryDSL.destinationDir
}

compileGeneratedJava {
    dependsOn generateQueryDSL
    options.warnings = false
    classpath += sourceSets.main.runtimeClasspath
}

compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

clean {
    delete sourceSets.generated.java.srcDirs
}

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'